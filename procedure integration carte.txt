Je vais vous redonner la version complète de l'intégration de la carte 16 avec le jeu d'objets cachés !

🎯 VERSION COMPLÈTE - INTÉGRATION CARTE 16 OBJETS CACHÉS

ÉTAPE 1 : LOCALISER LA CARTE 16

Ouvrez votre fichier index global fillscreengame 15.html

Appuyez sur Ctrl+F

Tapez : carte 16 ou game-card et cherchez la 16ème carte

Trouvez la carte qui ressemble à ceci :

ÉTAPE 2 : REMPLACER LA CARTE 16

Remplacez COMPLÈTEMENT la carte 16 par ce code :

ÉTAPE 3 : AJOUTER LE MODAL HTML

Juste APRÈS la section des 36 cartes (après la fermeture 

des cartes), ajoutez ce code HTML :

ÉTAPE 4 : AJOUTER LE CSS

Dans votre section existante (avant ), ajoutez ce CSS :

/* Styles pour le modal du jeu 16 objets */
.game-modal {
position: fixed;
top: 0;
left: 0;
width: 100%;
height: 100%;
background: rgba(0, 0, 0, 0.95);
z-index: 10000;
display: flex;
align-items: center;
justify-content: center;
backdrop-filter: blur(10px);
}

.modal-content {
background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
border: 2px solid #00ffff;
border-radius: 20px;
width: 95%;
height: 95%;
max-width: 1400px;
max-height: 900px;
display: flex;
flex-direction: column;
overflow: hidden;
box-shadow: 0 0 50px rgba(0, 255, 255, 0.3);
}

.modal-header {
display: flex;
justify-content: space-between;
align-items: center;
padding: 20px 30px;
border-bottom: 2px solid #00ffff;
background: rgba(0, 255, 255, 0.1);
}

.modal-header h2 {
color: #00ffff;
margin: 0;
font-family: 'Orbitron', Arial, sans-serif;
font-size: 24px;
text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
}

.close-btn {
background: linear-gradient(45deg, #ff6b6b, #ee5a24);
border: none;
color: white;
font-size: 28px;
width: 50px;
height: 50px;
border-radius: 50%;
cursor: pointer;
display: flex;
align-items: center;
justify-content: center;
transition: all 0.3s ease;
font-weight: bold;
}

.close-btn:hover {
transform: scale(1.1) rotate(90deg);
box-shadow: 0 0 20px rgba(255, 107, 107, 0.5);
}

.modal-body {
flex: 1;
overflow: auto;
padding: 0;
}

/* Styles du jeu 16 objets */
.hidden-objects-game {
width: 100%;
height: 100%;
display: flex;
flex-direction: column;
background: linear-gradient(135deg, #2c3e50, #34495e);
color: white;
font-family: 'Arial', sans-serif;
}

.game-header {
display: flex;
justify-content: space-between;
align-items: center;
padding: 20px;
background: rgba(0, 0, 0, 0.3);
border-bottom: 2px solid #00ffff;
}

.score-panel {
display: flex;
gap: 30px;
}

.score-item {
display: flex;
flex-direction: column;
align-items: center;
}

.score-item .label {
font-size: 12px;
color: #bdc3c7;
margin-bottom: 5px;
}

.score-item .value {
font-size: 18px;
font-weight: bold;
color: #00ffff;
}

.game-controls {
display: flex;
gap: 15px;
}

.game-btn {
padding: 10px 20px;
border: 2px solid #00ffff;
background: linear-gradient(45deg, rgba(0, 255, 255, 0.1), rgba(255, 0, 255, 0.1));
color: #00ffff;
border-radius: 25px;
cursor: pointer;
font-family: inherit;
font-size: 14px;
font-weight: bold;
transition: all 0.3s ease;
}

.game-btn:hover {
background: linear-gradient(45deg, rgba(0, 255, 255, 0.3), rgba(255, 0, 255, 0.3));
box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
transform: translateY(-2px);
}

.objects-list {
padding: 20px;
background: rgba(0, 0, 0, 0.2);
border-bottom: 1px solid #34495e;
}

.objects-list h3 {
margin: 0 0 15px 0;
color: #00ffff;
font-size: 16px;
}

.objects-grid {
display: flex;
flex-wrap: wrap;
gap: 10px;
}

.object-item {
display: flex;
align-items: center;
gap: 8px;
padding: 8px 12px;
background: rgba(52, 73, 94, 0.5);
border-radius: 20px;
border: 1px solid #34495e;
font-size: 14px;
transition: all 0.3s ease;
}

.object-item.found {
background: rgba(46, 204, 113, 0.3);
border-color: #2ecc71;
text-decoration: line-through;
opacity: 0.7;
}

.game-scene {
flex: 1;
position: relative;
overflow: hidden;
}

.scene-background {
width: 100%;
height: 100%;
background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
position: relative;
background-image: 
radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
}

.hidden-object {
position: absolute;
font-size: 24px;
cursor: pointer;
transition: all 0.3s ease;
opacity: 0.8;
transform: scale(1);
z-index: 10;
}

.hidden-object:hover {
transform: scale(1.2);
opacity: 1;
filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.8));
}

.hidden-object.found {
animation: foundAnimation 0.5s ease-out;
pointer-events: none;
}

@keyframes foundAnimation {
0% { transform: scale(1); }
50% { transform: scale(1.5) rotate(180deg); }
100% { transform: scale(0) rotate(360deg); opacity: 0; }
}

.game-message {
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
background: rgba(0, 0, 0, 0.9);
display: flex;
align-items: center;
justify-content: center;
z-index: 1000;
}

.message-content {
background: linear-gradient(135deg, #1a1a2e, #16213e);
border: 2px solid #00ffff;
border-radius: 20px;
padding: 40px;
text-align: center;
box-shadow: 0 0 50px rgba(0, 255, 255, 0.3);
}

.message-content h2 {
color: #00ffff;
margin: 0 0 20px 0;
font-size: 28px;
text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
}

.message-content p {
color: #bdc3c7;
margin: 0 0 30px 0;
font-size: 16px;
}

@media (max-width: 768px) {
.game-header {
flex-direction: column;
gap: 15px;
}

.score-panel {
gap: 20px;
}

.objects-list {
padding: 15px;
}

.hidden-object {
font-size: 20px;
}
}

ÉTAPE 5 : AJOUTER LE JAVASCRIPT

Juste AVANT la balise 

, ajoutez ce JavaScript :

// Jeu des 16 objets cachés
class HiddenObjectsGame {
constructor() {
this.objects = [
{ id: 'key', name: 'Clé', emoji: '🗝️' },
{ id: 'watch', name: 'Montre', emoji: '⌚' },
{ id: 'book', name: 'Livre', emoji: '📚' },
{ id: 'phone', name: 'Téléphone', emoji: '📱' },
{ id: 'glasses', name: 'Lunettes', emoji: '👓' },
{ id: 'pen', name: 'Stylo', emoji: '✏️' },
{ id: 'coin', name: 'Pièce', emoji: '🪙' },
{ id: 'ring', name: 'Bague', emoji: '💍' },
{ id: 'flower', name: 'Fleur', emoji: '🌸' },
{ id: 'star', name: 'Étoile', emoji: '⭐' },
{ id: 'heart', name: 'Cœur', emoji: '❤️' },
{ id: 'diamond', name: 'Diamant', emoji: '💎' },
{ id: 'crown', name: 'Couronne', emoji: '👑' },
{ id: 'butterfly', name: 'Papillon', emoji: '🦋' },
{ id: 'leaf', name: 'Feuille', emoji: '🍃' },
{ id: 'gem', name: 'Gemme', emoji: '💠' }
];

this.foundObjects = new Set();
this.startTime = null;
this.gameTimer = null;
this.score = 0;
this.hintsUsed = 0;
}

init() {
this.createObjectsList();
this.setupEventListeners();
this.startTimer();
this.updateUI();
}

createObjectsList() {
const objectsList = document.getElementById('objectsList');
objectsList.innerHTML = '';

this.objects.forEach(obj => {
const item = document.createElement('div');
item.className = 'object-item';
item.id = list-${obj.id};
item.innerHTML = ${obj.emoji}${obj.name};
objectsList.appendChild(item);
});
}

setupEventListeners() {
// Clic sur les objets cachés
document.querySelectorAll('.hidden-object').forEach(obj => {
obj.addEventListener('click', (e) => {
this.findObject(e.target.dataset.object);
});
});

// Boutons de contrôle
document.getElementById('hintBtn').addEventListener('click', () => this.giveHint());
document.getElementById('resetBtn').addEventListener('click', () => this.resetGame());
}

findObject(objectId) {
if (this.foundObjects.has(objectId)) return;

this.foundObjects.add(objectId);
this.score += 100 - (this.hintsUsed * 10);

// Animation de l'objet trouvé
const objectElement = document.querySelector([data-object="${objectId}"]);
objectElement.classList.add('found');

// Marquer dans la liste
const listItem = document.getElementById(list-${objectId});
listItem.classList.add('found');

// Effet sonore visuel
this.createFoundEffect(objectElement);

this.updateUI();

if (this.foundObjects.size === this.objects.length) {
this.gameComplete();
}
}

createFoundEffect(element) {
const rect = element.getBoundingClientRect();
const effect = document.createElement('div');
effect.style.position = 'fixed';
effect.style.left = rect.left + rect.width/2 + 'px';
effect.style.top = rect.top + rect.height/2 + 'px';
effect.style.width = '20px';
effect.style.height = '20px';
effect.style.background = 'radial-gradient(circle, #00ffff, transparent)';
effect.style.borderRadius = '50%';
effect.style.pointerEvents = 'none';
effect.style.zIndex = '9999';
effect.style.animation = 'foundEffect 1s ease-out forwards';

const style = document.createElement('style');
style.textContent = `
@keyframes foundEffect {
0% { transform: scale(0); opacity: 1; }
50% { transform: scale(3); opacity: 0.8; }
100% { transform: scale(6); opacity: 0; }
}
`;
document.head.appendChild(style);

document.body.appendChild(effect);
setTimeout(() => {
effect.remove();
style.remove();
}, 1000);
}

giveHint() {
const unfoundObjects = this.objects.filter(obj => !this.foundObjects.has(obj.id));
if (unfoundObjects.length === 0) return;

const randomObject = unfoundObjects[Math.floor(Math.random() * unfoundObjects.length)];
const objectElement = document.querySelector([data-object="${randomObject.id}"]);

objectElement.style.animation = 'hintPulse 2s ease-in-out 3';

const style = document.createElement('style');
style.textContent = `
@keyframes hintPulse {
0%, 100% { transform: scale(1); filter: brightness(1); }
50% { transform: scale(1.3); filter: brightness(2) drop-shadow(0 0 20px #ffff00); }
}
`;
document.head.appendChild(style);

setTimeout(() => {
objectElement.style.animation = '';
style.remove();
}, 6000);

this.hintsUsed++;
this.score = Math.max(0, this.score - 50);
this.updateUI();
}

startTimer() {
this.startTime = Date.now();
this.gameTimer = setInterval(() => {
this.updateTimer();
}, 1000);
}

updateTimer() {
const elapsed = Date.now() - this.startTime;
const minutes = Math.floor(elapsed / 60000);
const seconds = Math.floor((elapsed % 60000) / 1000);
document.getElementById('gameTime').textContent = 
${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')};
}

updateUI() {
document.getElementById('foundCount').textContent = ${this.foundObjects.size}/16;
document.getElementById('gameScore').textContent = this.score;
}

gameComplete() {
clearInterval(this.gameTimer);
const elapsed = Date.now() - this.startTime;
const minutes = Math.floor(elapsed / 60000);
const seconds = Math.floor((elapsed % 60000) / 1000);

const timeBonus = Math.max(0, 1000 - Math.floor(elapsed / 1000));
this.score += timeBonus;

document.getElementById('messageTitle').textContent = '🎉 Félicitations!';
document.getElementById('messageText').innerHTML = 
`Vous avez trouvé tous les objets en ${minutes}:${seconds.toString().padStart(2, '0')}!

Score final: ${this.score} points

Bonus temps: +${timeBonus} points`;

document.getElementById('gameMessage').style.display = 'flex';
}

resetGame() {
this.foundObjects.clear();
this.score = 0;
this.hintsUsed = 0;

// Reset visual elements
document.querySelectorAll('.hidden-object').forEach(obj => {
obj.classList.remove('found');
obj.style.animation = '';
});

document.querySelectorAll('.object-item').forEach(item => {
item.classList.remove('found');
});

document.getElementById('gameMessage').style.display = 'none';

if (this.gameTimer) {
clearInterval(this.gameTimer);
}

this.startTimer();
this.updateUI();
}

destroy() {
if (this.gameTimer) {
clearInterval(this.gameTimer);
}
}
}

// Variables globales pour le jeu
let hiddenObjectsGame = null;

// Fonctions de contrôle du modal
function openGame16() {
const modal = document.getElementById('game16Modal');
modal.style.display = 'flex';

// Animation d'ouverture
modal.style.opacity = '0';
setTimeout(() => {
modal.style.opacity = '1';
modal.style.transition = 'opacity 0.3s ease';
}, 10);

// Initialiser le jeu
setTimeout(() => {
hiddenObjectsGame = new HiddenObjectsGame();
hiddenObjectsGame.init();
}, 300);

// Désactiver le scroll de la page
document.body.style.overflow = 'hidden';
}

function closeGame16() {
const modal = document.getElementById('game16Modal');

// Animation de fermeture
modal.style.opacity = '0';
setTimeout(() => {
modal.style.display = 'none';
modal.style.transition = '';
}, 300);

// Nettoyer le jeu
if (hiddenObjectsGame) {
hiddenObjectsGame.destroy();
hiddenObjectsGame = null;
}

// Réactiver le scroll de la page
document.body.style.overflow = 'auto';
}

// Fermer avec la touche Échap
document.addEventListener('keydown', function(e) {
if (e.key === 'Escape' && document.getElementById('game16Modal').style.display === 'flex') {
closeGame16();
}
});

// Fermer en cliquant à l'extérieur du modal
document.addEventListener('click', function(e) {
if (e.target.id === 'game16Modal') {
closeGame16();
}
});

ÉTAPE 6 : VÉRIFICATION FINALE

A) Testez l'intégration :

Sauvegardez le fichier

Ouvrez-le dans un navigateur

Cliquez sur la carte 16

Le jeu doit s'ouvrir en modal

B) Fonctionnalités à tester :

✅ Ouverture du modal (clic sur carte 16)

✅ Fermeture du modal (bouton X, Échap, clic extérieur)

✅ Recherche des objets (clic sur les emojis)

✅ Système de score et timer

✅ Bouton indice (fait clignoter un objet)

✅ Bouton recommencer

✅ Message de félicitations à la fin

C) En cas de problème :

Vérifiez que tous les codes sont bien placés

Vérifiez qu'il n'y a pas de conflits avec d'autres jeux

Ouvrez la console du navigateur (F12) pour voir les erreurs

Voilà ! Votre jeu 16 objets cachés est maintenant parfaitement intégré dans votre plateforme ! 🎉```html
🎯
Jeu 16
Description du jeu


Objets à trouver:










🗝️


⌚


📚


📱


👓


✏️


🪙


💍


🌸


⭐


❤️


💎


👑


🦋


🍃


💠







Félicitations!


Vous avez trouvé tous les objets!


Fermer



